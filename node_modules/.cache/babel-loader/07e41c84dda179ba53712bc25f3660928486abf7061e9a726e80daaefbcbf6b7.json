{"ast":null,"code":"var _jsxFileName = \"/Users/amoghmaroju/Coding/Projects/disease-tracker/disease-tracker/disease-tracker/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, Select, FormControl, Card, CardContent } from \"@mui/material\";\nimport InfoBox from \"./InfoBox\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    // const response = axios.get(\"https://disease.sh/v3/covid-19/all\");\n    // const result = response.data;\n\n    // setCountryInfo(result);\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json());\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      const response = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\n      const result = response.data;\n      const countries = result.map(country => ({\n        name: country.country,\n        value: country.countryInfo.iso2\n      }));\n      setCountries(countries);\n    };\n    getCountriesData();\n  }, []);\n\n  // when selected country is changed in the drop down, change the display name on the menu\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n\n    // set url based on if a country is selected or not\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/countries\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    const response = await axios.get(url);\n    const result = response.data;\n    setCountry(countryCode);\n    setCountryInfo(result);\n    console.log(\"Country Code >>> \", countryCode);\n    console.log(\"Country Info >>> \", countryInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Disease Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"COVID-19 Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WQeJpbBNPlw4IzbfeZhT1sJpotk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MenuItem","Select","FormControl","Card","CardContent","InfoBox","axios","jsxDEV","_jsxDEV","App","_s","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","fetch","then","response","json","getCountriesData","get","result","data","map","name","value","iso2","onCountryChange","event","countryCode","target","url","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onChange","title","cases","todayCases","total","todayRecovered","recovered","todayDeaths","deaths","_c","$RefreshReg$"],"sources":["/Users/amoghmaroju/Coding/Projects/disease-tracker/disease-tracker/disease-tracker/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  Select,\n  FormControl,\n  Card,\n  CardContent,\n} from \"@mui/material\";\nimport InfoBox from \"./InfoBox\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n\n  useEffect(() => {\n    // const response = axios.get(\"https://disease.sh/v3/covid-19/all\");\n    // const result = response.data;\n\n    // setCountryInfo(result);\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json());\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      const response = await axios.get(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n      const result = response.data;\n\n      const countries = result.map((country) => ({\n        name: country.country,\n        value: country.countryInfo.iso2,\n      }));\n\n      setCountries(countries);\n    };\n\n    getCountriesData();\n  }, []);\n\n  // when selected country is changed in the drop down, change the display name on the menu\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    // set url based on if a country is selected or not\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/countries\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    const response = await axios.get(url);\n    const result = response.data;\n\n    setCountry(countryCode);\n    setCountryInfo(result);\n\n    console.log(\"Country Code >>> \", countryCode);\n    console.log(\"Country Info >>> \", countryInfo);\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Left side of screen */}\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          {/* Title */}\n          <h1>Disease Tracker</h1>\n\n          {/* Header */}\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              {/* Map countires to the drop down */}\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        {/* Infoboxes */}\n        <div className=\"app_stats\">\n          {/* Cases */}\n          <InfoBox\n            title=\"COVID-19 Cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n\n          {/* Recoveries */}\n          <InfoBox\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n\n          {/* Deaths */}\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n      </div>\n\n      {/* Right side of screen */}\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          {/* Table */}\n\n          <h3>Worldwide new cases</h3>\n          {/* Graph */}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SACEC,QAAQ,EACRC,MAAM,EACNC,WAAW,EACXC,IAAI,EACJC,WAAW,QACN,eAAe;AACtB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,WAAW,CAAC;EACnD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACAmB,KAAK,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACd,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMF,QAAQ,GAAG,MAAMb,KAAK,CAACgB,GAAG,CAC9B,0CACF,CAAC;MACD,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,IAAI;MAE5B,MAAMb,SAAS,GAAGY,MAAM,CAACE,GAAG,CAAEZ,OAAO,KAAM;QACzCa,IAAI,EAAEb,OAAO,CAACA,OAAO;QACrBc,KAAK,EAAEd,OAAO,CAACE,WAAW,CAACa;MAC7B,CAAC,CAAC,CAAC;MAEHhB,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC;IAEDU,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACL,KAAK;;IAEtC;IACA,MAAMM,GAAG,GACPF,WAAW,KAAK,WAAW,GACvB,0CAA0C,GAC1C,4CAA4CA,WAAW,EAAE;IAE/D,MAAMZ,QAAQ,GAAG,MAAMb,KAAK,CAACgB,GAAG,CAACW,GAAG,CAAC;IACrC,MAAMV,MAAM,GAAGJ,QAAQ,CAACK,IAAI;IAE5BV,UAAU,CAACiB,WAAW,CAAC;IACvBf,cAAc,CAACO,MAAM,CAAC;IAEtBW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,WAAW,CAAC;IAC7CG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEpB,WAAW,CAAC;EAC/C,CAAC;EAED,oBACEP,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElB7B,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB7B,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAEzB7B,OAAA;UAAA6B,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGxBjC,OAAA,CAACN,WAAW;UAACkC,SAAS,EAAC,cAAc;UAAAC,QAAA,eACnC7B,OAAA,CAACP,MAAM;YACLyC,OAAO,EAAC,UAAU;YAClBf,KAAK,EAAEd,OAAQ;YACf8B,QAAQ,EAAEd,eAAgB;YAAAQ,QAAA,gBAG1B7B,OAAA,CAACR,QAAQ;cAAC2B,KAAK,EAAC,WAAW;cAAAU,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,EAC/C9B,SAAS,CAACc,GAAG,CAAEZ,OAAO,iBACrBL,OAAA,CAACR,QAAQ;cAAC2B,KAAK,EAAEd,OAAO,CAACc,KAAM;cAAAU,QAAA,EAAExB,OAAO,CAACa;YAAI;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CACzD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAGNjC,OAAA;QAAK4B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAExB7B,OAAA,CAACH,OAAO;UACNuC,KAAK,EAAC,gBAAgB;UACtBC,KAAK,EAAE9B,WAAW,CAAC+B,UAAW;UAC9BC,KAAK,EAAEhC,WAAW,CAAC8B;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAGFjC,OAAA,CAACH,OAAO;UACNuC,KAAK,EAAC,WAAW;UACjBC,KAAK,EAAE9B,WAAW,CAACiC,cAAe;UAClCD,KAAK,EAAEhC,WAAW,CAACkC;QAAU;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAGFjC,OAAA,CAACH,OAAO;UACNuC,KAAK,EAAC,QAAQ;UACdC,KAAK,EAAE9B,WAAW,CAACmC,WAAY;UAC/BH,KAAK,EAAEhC,WAAW,CAACoC;QAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNjC,OAAA,CAACL,IAAI;MAACiC,SAAS,EAAC,WAAW;MAAAC,QAAA,eACzB7B,OAAA,CAACJ,WAAW;QAAAiC,QAAA,gBACV7B,OAAA;UAAA6B,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAG9BjC,OAAA;UAAA6B,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAjHID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAmHT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}